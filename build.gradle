plugins {
	id 'org.springframework.boot' version '2.2.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
	id 'org.asciidoctor.convert' version '1.5.9.2'
	id "org.flywaydb.flyway" version "6.3.3"
}

group = 'de.npruehs.missionrunner'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

    implementation 'org.modelmapper:modelmapper:2.3.5'

	implementation("com.google.guava:guava:28.2-jre")
	
	implementation 'joda-time:joda-time:2.10.5'
	
	implementation 'io.springfox:springfox-swagger2:2.9.2'
	implementation 'io.springfox:springfox-swagger-ui:2.9.2'
	
	asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor' 
	testCompile 'org.springframework.restdocs:spring-restdocs-mockmvc' 
	
	runtimeOnly 'com.h2database:h2'
	
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	
	testImplementation "com.google.truth:truth:1.0"
}

ext { 
    snippetsDir = file('build/generated-snippets')
}

test {
	useJUnitPlatform()
	
	outputs.dir snippetsDir
}

asciidoctor { 
    inputs.dir snippetsDir 
    dependsOn test 
}

flyway {
    url = 'jdbc:h2:~/.h2/mission-runner'
    user = 'sa'
    password = 'mr'
    baselineOnMigrate = true
}

bootJar {
    dependsOn asciidoctor
}
